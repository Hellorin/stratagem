/*
* generated by Xtext
*/
grammar InternalTransitionSystemDsl;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package ch.unige.cui.smv.stratagem.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ch.unige.cui.smv.stratagem.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import ch.unige.cui.smv.stratagem.xtext.services.TransitionSystemDslGrammarAccess;

}

@parser::members {
 
 	private TransitionSystemDslGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(TransitionSystemDslGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleTransitionSystem
entryRuleTransitionSystem 
:
{ before(grammarAccess.getTransitionSystemRule()); }
	 ruleTransitionSystem
{ after(grammarAccess.getTransitionSystemRule()); } 
	 EOF 
;

// Rule TransitionSystem
ruleTransitionSystem
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionSystemAccess().getGroup()); }
(rule__TransitionSystem__Group__0)
{ after(grammarAccess.getTransitionSystemAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAuxiliary
entryRuleAuxiliary 
:
{ before(grammarAccess.getAuxiliaryRule()); }
	 ruleAuxiliary
{ after(grammarAccess.getAuxiliaryRule()); } 
	 EOF 
;

// Rule Auxiliary
ruleAuxiliary
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAuxiliaryAccess().getGroup()); }
(rule__Auxiliary__Group__0)
{ after(grammarAccess.getAuxiliaryAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStrategy
entryRuleStrategy 
:
{ before(grammarAccess.getStrategyRule()); }
	 ruleStrategy
{ after(grammarAccess.getStrategyRule()); } 
	 EOF 
;

// Rule Strategy
ruleStrategy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStrategyAccess().getAlternatives()); }
(rule__Strategy__Alternatives)
{ after(grammarAccess.getStrategyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNonVariableStrategy
entryRuleNonVariableStrategy 
:
{ before(grammarAccess.getNonVariableStrategyRule()); }
	 ruleNonVariableStrategy
{ after(grammarAccess.getNonVariableStrategyRule()); } 
	 EOF 
;

// Rule NonVariableStrategy
ruleNonVariableStrategy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNonVariableStrategyAccess().getAlternatives()); }
(rule__NonVariableStrategy__Alternatives)
{ after(grammarAccess.getNonVariableStrategyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePredefStrats
entryRulePredefStrats 
:
{ before(grammarAccess.getPredefStratsRule()); }
	 rulePredefStrats
{ after(grammarAccess.getPredefStratsRule()); } 
	 EOF 
;

// Rule PredefStrats
rulePredefStrats
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPredefStratsAccess().getAlternatives()); }
(rule__PredefStrats__Alternatives)
{ after(grammarAccess.getPredefStratsAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOne
entryRuleOne 
:
{ before(grammarAccess.getOneRule()); }
	 ruleOne
{ after(grammarAccess.getOneRule()); } 
	 EOF 
;

// Rule One
ruleOne
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOneAccess().getGroup()); }
(rule__One__Group__0)
{ after(grammarAccess.getOneAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaredStrategyInstance
entryRuleDeclaredStrategyInstance 
:
{ before(grammarAccess.getDeclaredStrategyInstanceRule()); }
	 ruleDeclaredStrategyInstance
{ after(grammarAccess.getDeclaredStrategyInstanceRule()); } 
	 EOF 
;

// Rule DeclaredStrategyInstance
ruleDeclaredStrategyInstance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclaredStrategyInstanceAccess().getGroup()); }
(rule__DeclaredStrategyInstance__Group__0)
{ after(grammarAccess.getDeclaredStrategyInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSaturation
entryRuleSaturation 
:
{ before(grammarAccess.getSaturationRule()); }
	 ruleSaturation
{ after(grammarAccess.getSaturationRule()); } 
	 EOF 
;

// Rule Saturation
ruleSaturation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSaturationAccess().getGroup()); }
(rule__Saturation__Group__0)
{ after(grammarAccess.getSaturationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfThenElse
entryRuleIfThenElse 
:
{ before(grammarAccess.getIfThenElseRule()); }
	 ruleIfThenElse
{ after(grammarAccess.getIfThenElseRule()); } 
	 EOF 
;

// Rule IfThenElse
ruleIfThenElse
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfThenElseAccess().getGroup()); }
(rule__IfThenElse__Group__0)
{ after(grammarAccess.getIfThenElseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleStrategy
entryRuleSimpleStrategy 
:
{ before(grammarAccess.getSimpleStrategyRule()); }
	 ruleSimpleStrategy
{ after(grammarAccess.getSimpleStrategyRule()); } 
	 EOF 
;

// Rule SimpleStrategy
ruleSimpleStrategy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleStrategyAccess().getGroup()); }
(rule__SimpleStrategy__Group__0)
{ after(grammarAccess.getSimpleStrategyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNot
entryRuleNot 
:
{ before(grammarAccess.getNotRule()); }
	 ruleNot
{ after(grammarAccess.getNotRule()); } 
	 EOF 
;

// Rule Not
ruleNot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotAccess().getGroup()); }
(rule__Not__Group__0)
{ after(grammarAccess.getNotAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFixpoint
entryRuleFixpoint 
:
{ before(grammarAccess.getFixpointRule()); }
	 ruleFixpoint
{ after(grammarAccess.getFixpointRule()); } 
	 EOF 
;

// Rule Fixpoint
ruleFixpoint
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFixpointAccess().getGroup()); }
(rule__Fixpoint__Group__0)
{ after(grammarAccess.getFixpointAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAll
entryRuleAll 
:
{ before(grammarAccess.getAllRule()); }
	 ruleAll
{ after(grammarAccess.getAllRule()); } 
	 EOF 
;

// Rule All
ruleAll
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAllAccess().getGroup()); }
(rule__All__Group__0)
{ after(grammarAccess.getAllAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChoice
entryRuleChoice 
:
{ before(grammarAccess.getChoiceRule()); }
	 ruleChoice
{ after(grammarAccess.getChoiceRule()); } 
	 EOF 
;

// Rule Choice
ruleChoice
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChoiceAccess().getGroup()); }
(rule__Choice__Group__0)
{ after(grammarAccess.getChoiceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnion
entryRuleUnion 
:
{ before(grammarAccess.getUnionRule()); }
	 ruleUnion
{ after(grammarAccess.getUnionRule()); } 
	 EOF 
;

// Rule Union
ruleUnion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnionAccess().getGroup()); }
(rule__Union__Group__0)
{ after(grammarAccess.getUnionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequence
entryRuleSequence 
:
{ before(grammarAccess.getSequenceRule()); }
	 ruleSequence
{ after(grammarAccess.getSequenceRule()); } 
	 EOF 
;

// Rule Sequence
ruleSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceAccess().getGroup()); }
(rule__Sequence__Group__0)
{ after(grammarAccess.getSequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIdentity
entryRuleIdentity 
:
{ before(grammarAccess.getIdentityRule()); }
	 ruleIdentity
{ after(grammarAccess.getIdentityRule()); } 
	 EOF 
;

// Rule Identity
ruleIdentity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIdentityAccess().getGroup()); }
(rule__Identity__Group__0)
{ after(grammarAccess.getIdentityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFail
entryRuleFail 
:
{ before(grammarAccess.getFailRule()); }
	 ruleFail
{ after(grammarAccess.getFailRule()); } 
	 EOF 
;

// Rule Fail
ruleFail
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFailAccess().getGroup()); }
(rule__Fail__Group__0)
{ after(grammarAccess.getFailAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableStrategy
entryRuleVariableStrategy 
:
{ before(grammarAccess.getVariableStrategyRule()); }
	 ruleVariableStrategy
{ after(grammarAccess.getVariableStrategyRule()); } 
	 EOF 
;

// Rule VariableStrategy
ruleVariableStrategy
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableStrategyAccess().getNameAssignment()); }
(rule__VariableStrategy__NameAssignment)
{ after(grammarAccess.getVariableStrategyAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleATerm
entryRuleATerm 
:
{ before(grammarAccess.getATermRule()); }
	 ruleATerm
{ after(grammarAccess.getATermRule()); } 
	 EOF 
;

// Rule ATerm
ruleATerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getATermAccess().getAlternatives()); }
(rule__ATerm__Alternatives)
{ after(grammarAccess.getATermAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleASort
entryRuleASort 
:
{ before(grammarAccess.getASortRule()); }
	 ruleASort
{ after(grammarAccess.getASortRule()); } 
	 EOF 
;

// Rule ASort
ruleASort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASortAccess().getAlternatives()); }
(rule__ASort__Alternatives)
{ after(grammarAccess.getASortAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleADT
entryRuleADT 
:
{ before(grammarAccess.getADTRule()); }
	 ruleADT
{ after(grammarAccess.getADTRule()); } 
	 EOF 
;

// Rule ADT
ruleADT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getADTAccess().getGroup()); }
(rule__ADT__Group__0)
{ after(grammarAccess.getADTAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignature
entryRuleSignature 
:
{ before(grammarAccess.getSignatureRule()); }
	 ruleSignature
{ after(grammarAccess.getSignatureRule()); } 
	 EOF 
;

// Rule Signature
ruleSignature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignatureAccess().getGroup()); }
(rule__Signature__Group__0)
{ after(grammarAccess.getSignatureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDeclaration
entryRuleVariableDeclaration 
:
{ before(grammarAccess.getVariableDeclarationRule()); }
	 ruleVariableDeclaration
{ after(grammarAccess.getVariableDeclarationRule()); } 
	 EOF 
;

// Rule VariableDeclaration
ruleVariableDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclarationAccess().getGroup()); }
(rule__VariableDeclaration__Group__0)
{ after(grammarAccess.getVariableDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEquation
entryRuleEquation 
:
{ before(grammarAccess.getEquationRule()); }
	 ruleEquation
{ after(grammarAccess.getEquationRule()); } 
	 EOF 
;

// Rule Equation
ruleEquation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEquationAccess().getGroup()); }
(rule__Equation__Group__0)
{ after(grammarAccess.getEquationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRewriteRule
entryRuleRewriteRule 
:
{ before(grammarAccess.getRewriteRuleRule()); }
	 ruleRewriteRule
{ after(grammarAccess.getRewriteRuleRule()); } 
	 EOF 
;

// Rule RewriteRule
ruleRewriteRule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRewriteRuleAccess().getGroup()); }
(rule__RewriteRule__Group__0)
{ after(grammarAccess.getRewriteRuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubSort
entryRuleSubSort 
:
{ before(grammarAccess.getSubSortRule()); }
	 ruleSubSort
{ after(grammarAccess.getSubSortRule()); } 
	 EOF 
;

// Rule SubSort
ruleSubSort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubSortAccess().getGroup()); }
(rule__SubSort__Group__0)
{ after(grammarAccess.getSubSortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSort
entryRuleSort 
:
{ before(grammarAccess.getSortRule()); }
	 ruleSort
{ after(grammarAccess.getSortRule()); } 
	 EOF 
;

// Rule Sort
ruleSort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSortAccess().getGroup()); }
(rule__Sort__Group__0)
{ after(grammarAccess.getSortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTerm
entryRuleTerm 
:
{ before(grammarAccess.getTermRule()); }
	 ruleTerm
{ after(grammarAccess.getTermRule()); } 
	 EOF 
;

// Rule Term
ruleTerm
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTermAccess().getGroup()); }
(rule__Term__Group__0)
{ after(grammarAccess.getTermAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getGroup()); }
(rule__Operation__Group__0)
{ after(grammarAccess.getOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Strategy__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStrategyAccess().getNonVariableStrategyParserRuleCall_0()); }
	ruleNonVariableStrategy
{ after(grammarAccess.getStrategyAccess().getNonVariableStrategyParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStrategyAccess().getVariableStrategyParserRuleCall_1()); }
	ruleVariableStrategy
{ after(grammarAccess.getStrategyAccess().getVariableStrategyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NonVariableStrategy__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNonVariableStrategyAccess().getPredefStratsParserRuleCall_0()); }
(	rulePredefStrats)
{ after(grammarAccess.getNonVariableStrategyAccess().getPredefStratsParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNonVariableStrategyAccess().getDeclaredStrategyInstanceParserRuleCall_1()); }
	ruleDeclaredStrategyInstance
{ after(grammarAccess.getNonVariableStrategyAccess().getDeclaredStrategyInstanceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PredefStrats__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPredefStratsAccess().getIdentityParserRuleCall_0()); }
	ruleIdentity
{ after(grammarAccess.getPredefStratsAccess().getIdentityParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPredefStratsAccess().getFailParserRuleCall_1()); }
	ruleFail
{ after(grammarAccess.getPredefStratsAccess().getFailParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPredefStratsAccess().getChoiceParserRuleCall_2()); }
	ruleChoice
{ after(grammarAccess.getPredefStratsAccess().getChoiceParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPredefStratsAccess().getSequenceParserRuleCall_3()); }
	ruleSequence
{ after(grammarAccess.getPredefStratsAccess().getSequenceParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPredefStratsAccess().getFixpointParserRuleCall_4()); }
	ruleFixpoint
{ after(grammarAccess.getPredefStratsAccess().getFixpointParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPredefStratsAccess().getIfThenElseParserRuleCall_5()); }
	ruleIfThenElse
{ after(grammarAccess.getPredefStratsAccess().getIfThenElseParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPredefStratsAccess().getNotParserRuleCall_6()); }
	ruleNot
{ after(grammarAccess.getPredefStratsAccess().getNotParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getPredefStratsAccess().getSimpleStrategyParserRuleCall_7()); }
	ruleSimpleStrategy
{ after(grammarAccess.getPredefStratsAccess().getSimpleStrategyParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getPredefStratsAccess().getOneParserRuleCall_8()); }
	ruleOne
{ after(grammarAccess.getPredefStratsAccess().getOneParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getPredefStratsAccess().getSaturationParserRuleCall_9()); }
	ruleSaturation
{ after(grammarAccess.getPredefStratsAccess().getSaturationParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getPredefStratsAccess().getUnionParserRuleCall_10()); }
	ruleUnion
{ after(grammarAccess.getPredefStratsAccess().getUnionParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getPredefStratsAccess().getAllParserRuleCall_11()); }
	ruleAll
{ after(grammarAccess.getPredefStratsAccess().getAllParserRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Not__SAlternatives_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotAccess().getSSimpleStrategyParserRuleCall_2_0_0()); }
	ruleSimpleStrategy
{ after(grammarAccess.getNotAccess().getSSimpleStrategyParserRuleCall_2_0_0()); }
)

    |(
{ before(grammarAccess.getNotAccess().getSDeclaredStrategyInstanceParserRuleCall_2_0_1()); }
	ruleDeclaredStrategyInstance
{ after(grammarAccess.getNotAccess().getSDeclaredStrategyInstanceParserRuleCall_2_0_1()); }
)

    |(
{ before(grammarAccess.getNotAccess().getSVariableStrategyParserRuleCall_2_0_2()); }
	ruleVariableStrategy
{ after(grammarAccess.getNotAccess().getSVariableStrategyParserRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ATerm__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getATermAccess().getTermParserRuleCall_0()); }
	ruleTerm
{ after(grammarAccess.getATermAccess().getTermParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getATermAccess().getVariableParserRuleCall_1()); }
	ruleVariable
{ after(grammarAccess.getATermAccess().getVariableParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASort__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASortAccess().getSubSortParserRuleCall_0()); }
	ruleSubSort
{ after(grammarAccess.getASortAccess().getSubSortParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getASortAccess().getSortParserRuleCall_1()); }
	ruleSort
{ after(grammarAccess.getASortAccess().getSortParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TransitionSystem__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionSystem__Group__0__Impl
	rule__TransitionSystem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSystem__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSystemAccess().getTransitionSystemKeyword_0()); }

	'TransitionSystem' 

{ after(grammarAccess.getTransitionSystemAccess().getTransitionSystemKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionSystem__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionSystem__Group__1__Impl
	rule__TransitionSystem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSystem__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSystemAccess().getAdtAssignment_1()); }
(rule__TransitionSystem__AdtAssignment_1)
{ after(grammarAccess.getTransitionSystemAccess().getAdtAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionSystem__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionSystem__Group__2__Impl
	rule__TransitionSystem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSystem__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSystemAccess().getInitialStateKeyword_2()); }

	'initialState' 

{ after(grammarAccess.getTransitionSystemAccess().getInitialStateKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionSystem__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionSystem__Group__3__Impl
	rule__TransitionSystem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSystem__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSystemAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getTransitionSystemAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionSystem__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionSystem__Group__4__Impl
	rule__TransitionSystem__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSystem__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSystemAccess().getInitialStateAssignment_4()); }
(rule__TransitionSystem__InitialStateAssignment_4)
{ after(grammarAccess.getTransitionSystemAccess().getInitialStateAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionSystem__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionSystem__Group__5__Impl
	rule__TransitionSystem__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSystem__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSystemAccess().getStrategiesKeyword_5()); }

	'Strategies' 

{ after(grammarAccess.getTransitionSystemAccess().getStrategiesKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionSystem__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionSystem__Group__6__Impl
	rule__TransitionSystem__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSystem__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSystemAccess().getAuxiliaryAssignment_6()); }
(rule__TransitionSystem__AuxiliaryAssignment_6)*
{ after(grammarAccess.getTransitionSystemAccess().getAuxiliaryAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionSystem__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionSystem__Group__7__Impl
	rule__TransitionSystem__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSystem__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSystemAccess().getTransitionsKeyword_7()); }

	'Transitions' 

{ after(grammarAccess.getTransitionSystemAccess().getTransitionsKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionSystem__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionSystem__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSystem__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSystemAccess().getTransitionsAssignment_8()); }
(rule__TransitionSystem__TransitionsAssignment_8)*
{ after(grammarAccess.getTransitionSystemAccess().getTransitionsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getNameAssignment_0()); }
(rule__Transition__NameAssignment_0)
{ after(grammarAccess.getTransitionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getTransitionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getBodyAssignment_2()); }
(rule__Transition__BodyAssignment_2)
{ after(grammarAccess.getTransitionAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Auxiliary__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Auxiliary__Group__0__Impl
	rule__Auxiliary__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Auxiliary__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuxiliaryAccess().getNameAssignment_0()); }
(rule__Auxiliary__NameAssignment_0)
{ after(grammarAccess.getAuxiliaryAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Auxiliary__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Auxiliary__Group__1__Impl
	rule__Auxiliary__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Auxiliary__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuxiliaryAccess().getGroup_1()); }
(rule__Auxiliary__Group_1__0)?
{ after(grammarAccess.getAuxiliaryAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Auxiliary__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Auxiliary__Group__2__Impl
	rule__Auxiliary__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Auxiliary__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuxiliaryAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getAuxiliaryAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Auxiliary__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Auxiliary__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Auxiliary__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuxiliaryAccess().getBodyAssignment_3()); }
(rule__Auxiliary__BodyAssignment_3)
{ after(grammarAccess.getAuxiliaryAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Auxiliary__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Auxiliary__Group_1__0__Impl
	rule__Auxiliary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Auxiliary__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuxiliaryAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getAuxiliaryAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Auxiliary__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Auxiliary__Group_1__1__Impl
	rule__Auxiliary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Auxiliary__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuxiliaryAccess().getFormalParamsAssignment_1_1()); }
(rule__Auxiliary__FormalParamsAssignment_1_1)
{ after(grammarAccess.getAuxiliaryAccess().getFormalParamsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Auxiliary__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Auxiliary__Group_1__2__Impl
	rule__Auxiliary__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Auxiliary__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuxiliaryAccess().getGroup_1_2()); }
(rule__Auxiliary__Group_1_2__0)*
{ after(grammarAccess.getAuxiliaryAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Auxiliary__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Auxiliary__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Auxiliary__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuxiliaryAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getAuxiliaryAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Auxiliary__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Auxiliary__Group_1_2__0__Impl
	rule__Auxiliary__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Auxiliary__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuxiliaryAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getAuxiliaryAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Auxiliary__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Auxiliary__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Auxiliary__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuxiliaryAccess().getFormalParamsAssignment_1_2_1()); }
(rule__Auxiliary__FormalParamsAssignment_1_2_1)
{ after(grammarAccess.getAuxiliaryAccess().getFormalParamsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__One__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__One__Group__0__Impl
	rule__One__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__One__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneAccess().getOneKeyword_0()); }

	'One' 

{ after(grammarAccess.getOneAccess().getOneKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__One__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__One__Group__1__Impl
	rule__One__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__One__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getOneAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__One__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__One__Group__2__Impl
	rule__One__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__One__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneAccess().getSAssignment_2()); }
(rule__One__SAssignment_2)
{ after(grammarAccess.getOneAccess().getSAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__One__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__One__Group__3__Impl
	rule__One__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__One__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getOneAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__One__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__One__Group__4__Impl
	rule__One__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__One__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneAccess().getNAssignment_4()); }
(rule__One__NAssignment_4)
{ after(grammarAccess.getOneAccess().getNAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__One__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__One__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__One__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getOneAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__DeclaredStrategyInstance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredStrategyInstance__Group__0__Impl
	rule__DeclaredStrategyInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredStrategyInstance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredStrategyInstanceAccess().getDeclaredStrategyInstanceAction_0()); }
(

)
{ after(grammarAccess.getDeclaredStrategyInstanceAccess().getDeclaredStrategyInstanceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaredStrategyInstance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredStrategyInstance__Group__1__Impl
	rule__DeclaredStrategyInstance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredStrategyInstance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredStrategyInstanceAccess().getDeclarationAssignment_1()); }
(rule__DeclaredStrategyInstance__DeclarationAssignment_1)
{ after(grammarAccess.getDeclaredStrategyInstanceAccess().getDeclarationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaredStrategyInstance__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredStrategyInstance__Group__2__Impl
	rule__DeclaredStrategyInstance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredStrategyInstance__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredStrategyInstanceAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getDeclaredStrategyInstanceAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaredStrategyInstance__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredStrategyInstance__Group__3__Impl
	rule__DeclaredStrategyInstance__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredStrategyInstance__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredStrategyInstanceAccess().getGroup_3()); }
(rule__DeclaredStrategyInstance__Group_3__0)?
{ after(grammarAccess.getDeclaredStrategyInstanceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaredStrategyInstance__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredStrategyInstance__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredStrategyInstance__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredStrategyInstanceAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getDeclaredStrategyInstanceAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DeclaredStrategyInstance__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredStrategyInstance__Group_3__0__Impl
	rule__DeclaredStrategyInstance__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredStrategyInstance__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredStrategyInstanceAccess().getActualParamsAssignment_3_0()); }
(rule__DeclaredStrategyInstance__ActualParamsAssignment_3_0)
{ after(grammarAccess.getDeclaredStrategyInstanceAccess().getActualParamsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaredStrategyInstance__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredStrategyInstance__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredStrategyInstance__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredStrategyInstanceAccess().getGroup_3_1()); }
(rule__DeclaredStrategyInstance__Group_3_1__0)*
{ after(grammarAccess.getDeclaredStrategyInstanceAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeclaredStrategyInstance__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredStrategyInstance__Group_3_1__0__Impl
	rule__DeclaredStrategyInstance__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredStrategyInstance__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredStrategyInstanceAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getDeclaredStrategyInstanceAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeclaredStrategyInstance__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeclaredStrategyInstance__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredStrategyInstance__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredStrategyInstanceAccess().getActualParamsAssignment_3_1_1()); }
(rule__DeclaredStrategyInstance__ActualParamsAssignment_3_1_1)
{ after(grammarAccess.getDeclaredStrategyInstanceAccess().getActualParamsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Saturation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Saturation__Group__0__Impl
	rule__Saturation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Saturation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSaturationAccess().getSaturationKeyword_0()); }

	'Saturation' 

{ after(grammarAccess.getSaturationAccess().getSaturationKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Saturation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Saturation__Group__1__Impl
	rule__Saturation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Saturation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSaturationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSaturationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Saturation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Saturation__Group__2__Impl
	rule__Saturation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Saturation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSaturationAccess().getSAssignment_2()); }
(rule__Saturation__SAssignment_2)
{ after(grammarAccess.getSaturationAccess().getSAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Saturation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Saturation__Group__3__Impl
	rule__Saturation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Saturation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSaturationAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getSaturationAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Saturation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Saturation__Group__4__Impl
	rule__Saturation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Saturation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSaturationAccess().getNAssignment_4()); }
(rule__Saturation__NAssignment_4)
{ after(grammarAccess.getSaturationAccess().getNAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Saturation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Saturation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Saturation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSaturationAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getSaturationAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IfThenElse__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group__0__Impl
	rule__IfThenElse__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getIfThenElseKeyword_0()); }

	'IfThenElse' 

{ after(grammarAccess.getIfThenElseAccess().getIfThenElseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElse__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group__1__Impl
	rule__IfThenElse__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getIfThenElseAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElse__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group__2__Impl
	rule__IfThenElse__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getS1Assignment_2()); }
(rule__IfThenElse__S1Assignment_2)
{ after(grammarAccess.getIfThenElseAccess().getS1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElse__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group__3__Impl
	rule__IfThenElse__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getIfThenElseAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElse__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group__4__Impl
	rule__IfThenElse__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getS2Assignment_4()); }
(rule__IfThenElse__S2Assignment_4)
{ after(grammarAccess.getIfThenElseAccess().getS2Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElse__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group__5__Impl
	rule__IfThenElse__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getCommaKeyword_5()); }

	',' 

{ after(grammarAccess.getIfThenElseAccess().getCommaKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElse__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group__6__Impl
	rule__IfThenElse__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getS3Assignment_6()); }
(rule__IfThenElse__S3Assignment_6)
{ after(grammarAccess.getIfThenElseAccess().getS3Assignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfThenElse__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfThenElse__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getIfThenElseAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__SimpleStrategy__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleStrategy__Group__0__Impl
	rule__SimpleStrategy__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStrategy__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStrategyAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getSimpleStrategyAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStrategy__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleStrategy__Group__1__Impl
	rule__SimpleStrategy__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStrategy__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStrategyAccess().getEquationsAssignment_1()); }
(rule__SimpleStrategy__EquationsAssignment_1)
{ after(grammarAccess.getSimpleStrategyAccess().getEquationsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStrategy__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleStrategy__Group__2__Impl
	rule__SimpleStrategy__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStrategy__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStrategyAccess().getGroup_2()); }
(rule__SimpleStrategy__Group_2__0)*
{ after(grammarAccess.getSimpleStrategyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStrategy__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleStrategy__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStrategy__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStrategyAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getSimpleStrategyAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SimpleStrategy__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleStrategy__Group_2__0__Impl
	rule__SimpleStrategy__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStrategy__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStrategyAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getSimpleStrategyAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleStrategy__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleStrategy__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStrategy__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStrategyAccess().getEquationsAssignment_2_1()); }
(rule__SimpleStrategy__EquationsAssignment_2_1)
{ after(grammarAccess.getSimpleStrategyAccess().getEquationsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Not__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Not__Group__0__Impl
	rule__Not__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotAccess().getNotKeyword_0()); }

	'Not' 

{ after(grammarAccess.getNotAccess().getNotKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Not__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Not__Group__1__Impl
	rule__Not__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getNotAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Not__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Not__Group__2__Impl
	rule__Not__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotAccess().getSAssignment_2()); }
(rule__Not__SAssignment_2)
{ after(grammarAccess.getNotAccess().getSAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Not__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Not__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Not__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getNotAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Fixpoint__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fixpoint__Group__0__Impl
	rule__Fixpoint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fixpoint__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixpointAccess().getFixpointKeyword_0()); }

	'Fixpoint' 

{ after(grammarAccess.getFixpointAccess().getFixpointKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fixpoint__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fixpoint__Group__1__Impl
	rule__Fixpoint__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Fixpoint__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixpointAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFixpointAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fixpoint__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fixpoint__Group__2__Impl
	rule__Fixpoint__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Fixpoint__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixpointAccess().getSAssignment_2()); }
(rule__Fixpoint__SAssignment_2)
{ after(grammarAccess.getFixpointAccess().getSAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fixpoint__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fixpoint__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fixpoint__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixpointAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFixpointAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__All__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__All__Group__0__Impl
	rule__All__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__All__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllAccess().getAllKeyword_0()); }

	'All' 

{ after(grammarAccess.getAllAccess().getAllKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__All__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__All__Group__1__Impl
	rule__All__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__All__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getAllAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__All__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__All__Group__2__Impl
	rule__All__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__All__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllAccess().getSAssignment_2()); }
(rule__All__SAssignment_2)
{ after(grammarAccess.getAllAccess().getSAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__All__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__All__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__All__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getAllAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Choice__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group__0__Impl
	rule__Choice__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getChoiceKeyword_0()); }

	'Choice' 

{ after(grammarAccess.getChoiceAccess().getChoiceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Choice__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group__1__Impl
	rule__Choice__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getChoiceAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Choice__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group__2__Impl
	rule__Choice__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getS1Assignment_2()); }
(rule__Choice__S1Assignment_2)
{ after(grammarAccess.getChoiceAccess().getS1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Choice__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group__3__Impl
	rule__Choice__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getChoiceAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Choice__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group__4__Impl
	rule__Choice__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getS2Assignment_4()); }
(rule__Choice__S2Assignment_4)
{ after(grammarAccess.getChoiceAccess().getS2Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Choice__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Choice__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getChoiceAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Union__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union__Group__0__Impl
	rule__Union__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Union__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getUnionKeyword_0()); }

	'Union' 

{ after(grammarAccess.getUnionAccess().getUnionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union__Group__1__Impl
	rule__Union__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Union__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getUnionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union__Group__2__Impl
	rule__Union__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Union__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getS1Assignment_2()); }
(rule__Union__S1Assignment_2)
{ after(grammarAccess.getUnionAccess().getS1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union__Group__3__Impl
	rule__Union__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Union__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getUnionAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union__Group__4__Impl
	rule__Union__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Union__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getS2Assignment_4()); }
(rule__Union__S2Assignment_4)
{ after(grammarAccess.getUnionAccess().getS2Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Union__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Union__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Union__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getUnionAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Sequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__0__Impl
	rule__Sequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getSequenceKeyword_0()); }

	'Sequence' 

{ after(grammarAccess.getSequenceAccess().getSequenceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__1__Impl
	rule__Sequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getSequenceAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__2__Impl
	rule__Sequence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getS1Assignment_2()); }
(rule__Sequence__S1Assignment_2)
{ after(grammarAccess.getSequenceAccess().getS1Assignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__3__Impl
	rule__Sequence__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getCommaKeyword_3()); }

	',' 

{ after(grammarAccess.getSequenceAccess().getCommaKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__4__Impl
	rule__Sequence__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getS2Assignment_4()); }
(rule__Sequence__S2Assignment_4)
{ after(grammarAccess.getSequenceAccess().getS2Assignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getRightParenthesisKeyword_5()); }

	')' 

{ after(grammarAccess.getSequenceAccess().getRightParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Identity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identity__Group__0__Impl
	rule__Identity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Identity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityAccess().getIdentityKeyword_0()); }

	'Identity' 

{ after(grammarAccess.getIdentityAccess().getIdentityKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Identity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Identity__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Identity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIdentityAccess().getIdentityAction_1()); }
(

)
{ after(grammarAccess.getIdentityAccess().getIdentityAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Fail__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fail__Group__0__Impl
	rule__Fail__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Fail__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailAccess().getFailKeyword_0()); }

	'Fail' 

{ after(grammarAccess.getFailAccess().getFailKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Fail__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Fail__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Fail__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFailAccess().getFailAction_1()); }
(

)
{ after(grammarAccess.getFailAccess().getFailAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ADT__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADT__Group__0__Impl
	rule__ADT__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getADTKeyword_0()); }

	'ADT' 

{ after(grammarAccess.getADTAccess().getADTKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ADT__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADT__Group__1__Impl
	rule__ADT__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getNameAssignment_1()); }
(rule__ADT__NameAssignment_1)
{ after(grammarAccess.getADTAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ADT__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADT__Group__2__Impl
	rule__ADT__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getSignatureKeyword_2()); }

	'Signature' 

{ after(grammarAccess.getADTAccess().getSignatureKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ADT__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADT__Group__3__Impl
	rule__ADT__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getSignatureAssignment_3()); }
(rule__ADT__SignatureAssignment_3)
{ after(grammarAccess.getADTAccess().getSignatureAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ADT__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADT__Group__4__Impl
	rule__ADT__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getGroup_4()); }
(rule__ADT__Group_4__0)?
{ after(grammarAccess.getADTAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ADT__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADT__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getGroup_5()); }
(rule__ADT__Group_5__0)?
{ after(grammarAccess.getADTAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ADT__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADT__Group_4__0__Impl
	rule__ADT__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getAxiomsKeyword_4_0()); }
(
	'Axioms' 
)
{ after(grammarAccess.getADTAccess().getAxiomsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ADT__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADT__Group_4__1__Impl
	rule__ADT__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getEquationsAssignment_4_1()); }
(rule__ADT__EquationsAssignment_4_1)
{ after(grammarAccess.getADTAccess().getEquationsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ADT__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADT__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getEquationsAssignment_4_2()); }
(rule__ADT__EquationsAssignment_4_2)*
{ after(grammarAccess.getADTAccess().getEquationsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ADT__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADT__Group_5__0__Impl
	rule__ADT__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getVariablesKeyword_5_0()); }
(
	'Variables' 
)
{ after(grammarAccess.getADTAccess().getVariablesKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ADT__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADT__Group_5__1__Impl
	rule__ADT__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getVariablesAssignment_5_1()); }
(rule__ADT__VariablesAssignment_5_1)
{ after(grammarAccess.getADTAccess().getVariablesAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ADT__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ADT__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getVariablesAssignment_5_2()); }
(rule__ADT__VariablesAssignment_5_2)*
{ after(grammarAccess.getADTAccess().getVariablesAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Signature__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group__0__Impl
	rule__Signature__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getSortsKeyword_0()); }

	'Sorts' 

{ after(grammarAccess.getSignatureAccess().getSortsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group__1__Impl
	rule__Signature__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getSortsAssignment_1()); }
(rule__Signature__SortsAssignment_1)
{ after(grammarAccess.getSignatureAccess().getSortsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group__2__Impl
	rule__Signature__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getGroup_2()); }
(rule__Signature__Group_2__0)*
{ after(grammarAccess.getSignatureAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group__3__Impl
	rule__Signature__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getGroup_3()); }
(rule__Signature__Group_3__0)
{ after(grammarAccess.getSignatureAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getGroup_4()); }
(rule__Signature__Group_4__0)?
{ after(grammarAccess.getSignatureAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Signature__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group_2__0__Impl
	rule__Signature__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getSignatureAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getSortsAssignment_2_1()); }
(rule__Signature__SortsAssignment_2_1)
{ after(grammarAccess.getSignatureAccess().getSortsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signature__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group_3__0__Impl
	rule__Signature__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getGeneratorsKeyword_3_0()); }
(
	'Generators' 
)
{ after(grammarAccess.getSignatureAccess().getGeneratorsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group_3__1__Impl
	rule__Signature__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getGeneratorsAssignment_3_1()); }
(rule__Signature__GeneratorsAssignment_3_1)
{ after(grammarAccess.getSignatureAccess().getGeneratorsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getGeneratorsAssignment_3_2()); }
(rule__Signature__GeneratorsAssignment_3_2)*
{ after(grammarAccess.getSignatureAccess().getGeneratorsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Signature__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group_4__0__Impl
	rule__Signature__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getOperationsKeyword_4_0()); }
(
	'Operations' 
)
{ after(grammarAccess.getSignatureAccess().getOperationsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group_4__1__Impl
	rule__Signature__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getOperationsAssignment_4_1()); }
(rule__Signature__OperationsAssignment_4_1)
{ after(grammarAccess.getSignatureAccess().getOperationsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signature__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signature__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getOperationsAssignment_4_2()); }
(rule__Signature__OperationsAssignment_4_2)*
{ after(grammarAccess.getSignatureAccess().getOperationsAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__0__Impl
	rule__VariableDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameAssignment_0()); }
(rule__VariableDeclaration__NameAssignment_0)
{ after(grammarAccess.getVariableDeclarationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__1__Impl
	rule__VariableDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getVariableDeclarationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getSortAssignment_2()); }
(rule__VariableDeclaration__SortAssignment_2)
{ after(grammarAccess.getVariableDeclarationAccess().getSortAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Equation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group__0__Impl
	rule__Equation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getLeftHandTermAssignment_0()); }
(rule__Equation__LeftHandTermAssignment_0)
{ after(grammarAccess.getEquationAccess().getLeftHandTermAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group__1__Impl
	rule__Equation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getEquationAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Equation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Equation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getRightHandTermAssignment_2()); }
(rule__Equation__RightHandTermAssignment_2)
{ after(grammarAccess.getEquationAccess().getRightHandTermAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RewriteRule__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewriteRule__Group__0__Impl
	rule__RewriteRule__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RewriteRule__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewriteRuleAccess().getLeftHandTermAssignment_0()); }
(rule__RewriteRule__LeftHandTermAssignment_0)
{ after(grammarAccess.getRewriteRuleAccess().getLeftHandTermAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RewriteRule__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewriteRule__Group__1__Impl
	rule__RewriteRule__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RewriteRule__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewriteRuleAccess().getHyphenMinusGreaterThanSignKeyword_1()); }

	'->' 

{ after(grammarAccess.getRewriteRuleAccess().getHyphenMinusGreaterThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RewriteRule__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RewriteRule__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RewriteRule__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewriteRuleAccess().getRightHandTermAssignment_2()); }
(rule__RewriteRule__RightHandTermAssignment_2)
{ after(grammarAccess.getRewriteRuleAccess().getRightHandTermAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SubSort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubSort__Group__0__Impl
	rule__SubSort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSort__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubSortAccess().getNameAssignment_0()); }
(rule__SubSort__NameAssignment_0)
{ after(grammarAccess.getSubSortAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubSort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubSort__Group__1__Impl
	rule__SubSort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSort__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubSortAccess().getLessThanSignKeyword_1()); }

	'<' 

{ after(grammarAccess.getSubSortAccess().getLessThanSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubSort__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubSort__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubSort__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubSortAccess().getSuperSortAssignment_2()); }
(rule__SubSort__SuperSortAssignment_2)
{ after(grammarAccess.getSubSortAccess().getSuperSortAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Sort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sort__Group__0__Impl
	rule__Sort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sort__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortAccess().getSortAction_0()); }
(

)
{ after(grammarAccess.getSortAccess().getSortAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sort__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sort__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortAccess().getNameAssignment_1()); }
(rule__Sort__NameAssignment_1)
{ after(grammarAccess.getSortAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Term__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__0__Impl
	rule__Term__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getTermAction_0()); }
(

)
{ after(grammarAccess.getTermAccess().getTermAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__1__Impl
	rule__Term__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getOperationSymbolAssignment_1()); }
(rule__Term__OperationSymbolAssignment_1)
{ after(grammarAccess.getTermAccess().getOperationSymbolAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getGroup_2()); }
(rule__Term__Group_2__0)?
{ after(grammarAccess.getTermAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Term__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_2__0__Impl
	rule__Term__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getTermAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_2__1__Impl
	rule__Term__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getSubtermsAssignment_2_1()); }
(rule__Term__SubtermsAssignment_2_1)
{ after(grammarAccess.getTermAccess().getSubtermsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_2__2__Impl
	rule__Term__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getGroup_2_2()); }
(rule__Term__Group_2_2__0)*
{ after(grammarAccess.getTermAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getTermAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Term__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_2_2__0__Impl
	rule__Term__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getTermAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Term__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Term__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Term__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getSubtermsAssignment_2_2_1()); }
(rule__Term__SubtermsAssignment_2_2_1)
{ after(grammarAccess.getTermAccess().getSubtermsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVariableAction_0()); }
(

)
{ after(grammarAccess.getVariableAccess().getVariableAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getDeclarationAssignment_1()); }
(rule__Variable__DeclarationAssignment_1)
{ after(grammarAccess.getVariableAccess().getDeclarationAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Operation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameAssignment_0()); }
(rule__Operation__NameAssignment_0)
{ after(grammarAccess.getOperationAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getOperationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_2()); }
(rule__Operation__Group_2__0)?
{ after(grammarAccess.getOperationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getReturnTypeAssignment_3()); }
(rule__Operation__ReturnTypeAssignment_3)
{ after(grammarAccess.getOperationAccess().getReturnTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Operation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_2__0__Impl
	rule__Operation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getFormalParametersAssignment_2_0()); }
(rule__Operation__FormalParametersAssignment_2_0)
{ after(grammarAccess.getOperationAccess().getFormalParametersAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_2__1__Impl
	rule__Operation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_2_1()); }
(rule__Operation__Group_2_1__0)*
{ after(grammarAccess.getOperationAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getHyphenMinusGreaterThanSignKeyword_2_2()); }

	'->' 

{ after(grammarAccess.getOperationAccess().getHyphenMinusGreaterThanSignKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Operation__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_2_1__0__Impl
	rule__Operation__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getOperationAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getFormalParametersAssignment_2_1_1()); }
(rule__Operation__FormalParametersAssignment_2_1_1)
{ after(grammarAccess.getOperationAccess().getFormalParametersAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__TransitionSystem__AdtAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSystemAccess().getAdtADTParserRuleCall_1_0()); }
	ruleADT{ after(grammarAccess.getTransitionSystemAccess().getAdtADTParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSystem__InitialStateAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSystemAccess().getInitialStateTermParserRuleCall_4_0()); }
	ruleTerm{ after(grammarAccess.getTransitionSystemAccess().getInitialStateTermParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSystem__AuxiliaryAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSystemAccess().getAuxiliaryAuxiliaryParserRuleCall_6_0()); }
	ruleAuxiliary{ after(grammarAccess.getTransitionSystemAccess().getAuxiliaryAuxiliaryParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSystem__TransitionsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSystemAccess().getTransitionsTransitionParserRuleCall_8_0()); }
	ruleTransition{ after(grammarAccess.getTransitionSystemAccess().getTransitionsTransitionParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getBodyNonVariableStrategyParserRuleCall_2_0()); }
	ruleNonVariableStrategy{ after(grammarAccess.getTransitionAccess().getBodyNonVariableStrategyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Auxiliary__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuxiliaryAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getAuxiliaryAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Auxiliary__FormalParamsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuxiliaryAccess().getFormalParamsVariableStrategyParserRuleCall_1_1_0()); }
	ruleVariableStrategy{ after(grammarAccess.getAuxiliaryAccess().getFormalParamsVariableStrategyParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Auxiliary__FormalParamsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuxiliaryAccess().getFormalParamsVariableStrategyParserRuleCall_1_2_1_0()); }
	ruleVariableStrategy{ after(grammarAccess.getAuxiliaryAccess().getFormalParamsVariableStrategyParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Auxiliary__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAuxiliaryAccess().getBodyNonVariableStrategyParserRuleCall_3_0()); }
	ruleNonVariableStrategy{ after(grammarAccess.getAuxiliaryAccess().getBodyNonVariableStrategyParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__One__SAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneAccess().getSStrategyParserRuleCall_2_0()); }
	ruleStrategy{ after(grammarAccess.getOneAccess().getSStrategyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__One__NAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneAccess().getNINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getOneAccess().getNINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredStrategyInstance__DeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredStrategyInstanceAccess().getDeclarationDeclaredStrategyCrossReference_1_0()); }
(
{ before(grammarAccess.getDeclaredStrategyInstanceAccess().getDeclarationDeclaredStrategyIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getDeclaredStrategyInstanceAccess().getDeclarationDeclaredStrategyIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getDeclaredStrategyInstanceAccess().getDeclarationDeclaredStrategyCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredStrategyInstance__ActualParamsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredStrategyInstanceAccess().getActualParamsStrategyParserRuleCall_3_0_0()); }
	ruleStrategy{ after(grammarAccess.getDeclaredStrategyInstanceAccess().getActualParamsStrategyParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeclaredStrategyInstance__ActualParamsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclaredStrategyInstanceAccess().getActualParamsStrategyParserRuleCall_3_1_1_0()); }
	ruleStrategy{ after(grammarAccess.getDeclaredStrategyInstanceAccess().getActualParamsStrategyParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Saturation__SAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSaturationAccess().getSStrategyParserRuleCall_2_0()); }
	ruleStrategy{ after(grammarAccess.getSaturationAccess().getSStrategyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Saturation__NAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSaturationAccess().getNINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getSaturationAccess().getNINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__S1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getS1StrategyParserRuleCall_2_0()); }
	ruleStrategy{ after(grammarAccess.getIfThenElseAccess().getS1StrategyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__S2Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getS2StrategyParserRuleCall_4_0()); }
	ruleStrategy{ after(grammarAccess.getIfThenElseAccess().getS2StrategyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfThenElse__S3Assignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfThenElseAccess().getS3StrategyParserRuleCall_6_0()); }
	ruleStrategy{ after(grammarAccess.getIfThenElseAccess().getS3StrategyParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStrategy__EquationsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStrategyAccess().getEquationsRewriteRuleParserRuleCall_1_0()); }
	ruleRewriteRule{ after(grammarAccess.getSimpleStrategyAccess().getEquationsRewriteRuleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleStrategy__EquationsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleStrategyAccess().getEquationsRewriteRuleParserRuleCall_2_1_0()); }
	ruleRewriteRule{ after(grammarAccess.getSimpleStrategyAccess().getEquationsRewriteRuleParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Not__SAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotAccess().getSAlternatives_2_0()); }
(rule__Not__SAlternatives_2_0)
{ after(grammarAccess.getNotAccess().getSAlternatives_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fixpoint__SAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixpointAccess().getSStrategyParserRuleCall_2_0()); }
	ruleStrategy{ after(grammarAccess.getFixpointAccess().getSStrategyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__All__SAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllAccess().getSStrategyParserRuleCall_2_0()); }
	ruleStrategy{ after(grammarAccess.getAllAccess().getSStrategyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__S1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getS1StrategyParserRuleCall_2_0()); }
	ruleStrategy{ after(grammarAccess.getChoiceAccess().getS1StrategyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Choice__S2Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChoiceAccess().getS2StrategyParserRuleCall_4_0()); }
	ruleStrategy{ after(grammarAccess.getChoiceAccess().getS2StrategyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Union__S1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getS1StrategyParserRuleCall_2_0()); }
	ruleStrategy{ after(grammarAccess.getUnionAccess().getS1StrategyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Union__S2Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionAccess().getS2StrategyParserRuleCall_4_0()); }
	ruleStrategy{ after(grammarAccess.getUnionAccess().getS2StrategyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__S1Assignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getS1StrategyParserRuleCall_2_0()); }
	ruleStrategy{ after(grammarAccess.getSequenceAccess().getS1StrategyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__S2Assignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getS2StrategyParserRuleCall_4_0()); }
	ruleStrategy{ after(grammarAccess.getSequenceAccess().getS2StrategyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableStrategy__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableStrategyAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getVariableStrategyAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getADTAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__SignatureAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getSignatureSignatureParserRuleCall_3_0()); }
	ruleSignature{ after(grammarAccess.getADTAccess().getSignatureSignatureParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__EquationsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getEquationsEquationParserRuleCall_4_1_0()); }
	ruleEquation{ after(grammarAccess.getADTAccess().getEquationsEquationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__EquationsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getEquationsEquationParserRuleCall_4_2_0()); }
	ruleEquation{ after(grammarAccess.getADTAccess().getEquationsEquationParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__VariablesAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getVariablesVariableDeclarationParserRuleCall_5_1_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getADTAccess().getVariablesVariableDeclarationParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ADT__VariablesAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getADTAccess().getVariablesVariableDeclarationParserRuleCall_5_2_0()); }
	ruleVariableDeclaration{ after(grammarAccess.getADTAccess().getVariablesVariableDeclarationParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__SortsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getSortsASortParserRuleCall_1_0()); }
	ruleASort{ after(grammarAccess.getSignatureAccess().getSortsASortParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__SortsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getSortsASortParserRuleCall_2_1_0()); }
	ruleASort{ after(grammarAccess.getSignatureAccess().getSortsASortParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__GeneratorsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getGeneratorsOperationParserRuleCall_3_1_0()); }
	ruleOperation{ after(grammarAccess.getSignatureAccess().getGeneratorsOperationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__GeneratorsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getGeneratorsOperationParserRuleCall_3_2_0()); }
	ruleOperation{ after(grammarAccess.getSignatureAccess().getGeneratorsOperationParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__OperationsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getOperationsOperationParserRuleCall_4_1_0()); }
	ruleOperation{ after(grammarAccess.getSignatureAccess().getOperationsOperationParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signature__OperationsAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignatureAccess().getOperationsOperationParserRuleCall_4_2_0()); }
	ruleOperation{ after(grammarAccess.getSignatureAccess().getOperationsOperationParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getVariableDeclarationAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDeclaration__SortAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclarationAccess().getSortASortCrossReference_2_0()); }
(
{ before(grammarAccess.getVariableDeclarationAccess().getSortASortIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableDeclarationAccess().getSortASortIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getVariableDeclarationAccess().getSortASortCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__LeftHandTermAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getLeftHandTermATermParserRuleCall_0_0()); }
	ruleATerm{ after(grammarAccess.getEquationAccess().getLeftHandTermATermParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Equation__RightHandTermAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEquationAccess().getRightHandTermATermParserRuleCall_2_0()); }
	ruleATerm{ after(grammarAccess.getEquationAccess().getRightHandTermATermParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RewriteRule__LeftHandTermAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewriteRuleAccess().getLeftHandTermATermParserRuleCall_0_0()); }
	ruleATerm{ after(grammarAccess.getRewriteRuleAccess().getLeftHandTermATermParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RewriteRule__RightHandTermAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRewriteRuleAccess().getRightHandTermATermParserRuleCall_2_0()); }
	ruleATerm{ after(grammarAccess.getRewriteRuleAccess().getRightHandTermATermParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubSort__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubSortAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getSubSortAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubSort__SuperSortAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubSortAccess().getSuperSortASortCrossReference_2_0()); }
(
{ before(grammarAccess.getSubSortAccess().getSuperSortASortIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getSubSortAccess().getSuperSortASortIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getSubSortAccess().getSuperSortASortCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sort__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSortAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSortAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__OperationSymbolAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getOperationSymbolOperationCrossReference_1_0()); }
(
{ before(grammarAccess.getTermAccess().getOperationSymbolOperationIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTermAccess().getOperationSymbolOperationIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getTermAccess().getOperationSymbolOperationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__SubtermsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getSubtermsATermParserRuleCall_2_1_0()); }
	ruleATerm{ after(grammarAccess.getTermAccess().getSubtermsATermParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Term__SubtermsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTermAccess().getSubtermsATermParserRuleCall_2_2_1_0()); }
	ruleATerm{ after(grammarAccess.getTermAccess().getSubtermsATermParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__DeclarationAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getDeclarationVariableDeclarationCrossReference_1_0()); }
(
{ before(grammarAccess.getVariableAccess().getDeclarationVariableDeclarationTERMVARTerminalRuleCall_1_0_1()); }
	RULE_TERMVAR{ after(grammarAccess.getVariableAccess().getDeclarationVariableDeclarationTERMVARTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getVariableAccess().getDeclarationVariableDeclarationCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__FormalParametersAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getFormalParametersASortCrossReference_2_0_0()); }
(
{ before(grammarAccess.getOperationAccess().getFormalParametersASortIDTerminalRuleCall_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getOperationAccess().getFormalParametersASortIDTerminalRuleCall_2_0_0_1()); }
)
{ after(grammarAccess.getOperationAccess().getFormalParametersASortCrossReference_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__FormalParametersAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getFormalParametersASortCrossReference_2_1_1_0()); }
(
{ before(grammarAccess.getOperationAccess().getFormalParametersASortIDTerminalRuleCall_2_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getOperationAccess().getFormalParametersASortIDTerminalRuleCall_2_1_1_0_1()); }
)
{ after(grammarAccess.getOperationAccess().getFormalParametersASortCrossReference_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ReturnTypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getReturnTypeASortCrossReference_3_0()); }
(
{ before(grammarAccess.getOperationAccess().getReturnTypeASortIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getOperationAccess().getReturnTypeASortIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getOperationAccess().getReturnTypeASortCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_TERMVAR : '$' '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


